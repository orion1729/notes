
利用 http request 使用 API
格式如下
http://maps.googleapis.com/maps/api/directions/output?parameters
https://...

其中 output 指的是以何種方式包裝
有 json 和 xml

參數之間以「&」做連結

---

必須參數：
orgin - 起點，可用經緯度或地名。使用經緯度時順序為 latitude,longitude
destination - 終點，其他同上。
sensor - 是否有感應器，必須為 true or false

---

選用參數：
mode - 指定交通模式。有 driving, walking, bicycling, transit
（transit 需指定 departure_time, arrival_time）
units - 指定單位。metric 為公制，imperial 為英制

---

取得導航路徑：

回傳的 JSON 是一個 JSON 物件
裡面有 status 字串與一個 routes 的 JSON 陣列

取得 routes 的 JSON 陣列後，內容有一個 JSON 物件
利用 index = 0 去取得這個 JSON 物件

最後從這個 JSON 物件當中找 overview_polyline 這個名稱的 JSON 物件
內容包含了一個 points 字串

此字串即為導航的編碼

---

解碼：


1.  採用初始含正負號的值：
    -179.9832104

2.  採用十進位值並乘以 1E5，然後將結果四捨五入：
    -17998321

3.  將十進位值轉換為二進位。請注意，計算負值時，請務必使用其 2 的補數，做法是將二進位值反相運算，再將結果加 1：
    00000001 00010010 10100001 11110001
    11111110 11101101 01011110 00001110
    11111110 11101101 01011110 00001111

4.  將二進位值往左移動一個位元：
    11111101 11011010 10111100 00011110

5.  如果原始的十進位值是負值，則將這個編碼反相運算：
    00000010 00100101 01000011 11100001

6.  將二進位值分割成 5 位元的區塊 (從右邊開始)：
    00001 00010 01010 10000 11111 00001

7.  將 5 位元區塊按照相反順序排列：
    00001 11111 10000 01010 00010 00001

8.  如果有另一個位元區塊緊接其後，則將每一個值與 0x20 進行 OR 運算：
    100001 111111 110000 101010 100010 000001

9.  將每一個值轉換成十進位：
    33 63 48 42 34 1

10. 將每個值加上 63：
    96 126 111 105 97 64

11. 將每個值轉換成相等的 ASCII 字元碼：
    `~oia@
